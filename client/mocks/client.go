// Code generated by mockery 2.12.1. DO NOT EDIT.

package mocks

import (
	client "github.com/ovrclk/akash/client"
	broadcaster "github.com/ovrclk/akash/client/broadcaster"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Query provides a mock function with given fields:
func (_m *Client) Query() client.QueryClient {
	ret := _m.Called()

	var r0 client.QueryClient
	if rf, ok := ret.Get(0).(func() client.QueryClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(client.QueryClient)
		}
	}

	return r0
}

// Tx provides a mock function with given fields:
func (_m *Client) Tx() broadcaster.Client {
	ret := _m.Called()

	var r0 broadcaster.Client
	if rf, ok := ret.Get(0).(func() broadcaster.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(broadcaster.Client)
		}
	}

	return r0
}

// NewClient creates a new instance of Client. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t testing.TB) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
