name: upgrades
defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - v*
jobs:
  ensure-release:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure release PASS
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          running-workflow-name: 'release'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
  test:
    runs-on: upgrade-tester
    needs:
      - ensure-release
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - name: set environment
        uses: HatsuneMiku3939/direnv-action@v1
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GOLANG_VERSION }}"
      - name: configure variables
        run: |
          test_required=$(./script/upgrades.sh test-required ${{ github.ref }})
          echo "TEST_REQUIRED=$test_required" >> $GITHUB_ENV
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: run test
        if: env.TEST_REQUIRED == 'true'
        run: |
          cd tests/upgrade
          UPGRADE_BINARY_VERSION=${{ env.RELEASE_TAG }} make test
      - name: dump stderr
        if: always() && steps.test.outcome != 'skipped'
        run: cat .cache/run/upgrade/stderr.log
      - name: upload stderr
        if: always() && steps.test.outcome != 'skipped'
        uses: actions/upload-artifact@v3
        with:
          name: stderr.log
          path: .cache/run/upgrade/stderr.log
      - name: upload stdout
        if: always() && steps.test.outcome != 'skipped'
        uses: actions/upload-artifact@v3
        with:
          name: stdout.log
          path: .cache/run/upgrade/stdout.log
